package prob.basic.dfs;
/*
 	Q.외판원순회
 	 1번부터 N번까지 번호가 매겨져 있는 도시가 있고, 도시들 사이에 길이 있는 경우에만
 	 이동할 수 있다. 여행을 좋아하는 영준이는 M번 도시에서 출발하여 출발지를 제외한 모든
 	 도시를 정확히 한 번씩만 방문한 후 처음 출발지인 M번 도시로 돌아오려고 한다. 이때 도시
 	 들 사이의 길을 지나갈 때 지불해야 하는 통행료가 있어, 종민이는 최소한의 비용으로 모든
 	 도시를 여행하고 싶다. 종민이가 모든 도시를 여행할 때 필요한 최소비용을 출력하는 프로
 	 그램을 작성하시오.
 	 
 	 [입력]
 	  첫 번째 줄에 테스트케이스의 수T(1 ≤ T ≤ 10)가 주어진다.
 	 각 테스트케이스마다 첫 번째 줄에는 도시의 수 N과 출발지 M이 공백을 두고 주어진다
 	 (3 ≤ N ≤ 10, 1 ≤ M ≤ N). 다음 N개의 줄에는 각 줄에 N개의 숫자들이 공백을 두고 주어지는
 	 데 i번째 줄의 j번째 숫자는 i번째 도시에서 j번째 도시로 가는데 드는 통행료 MAT[i][j]를
 	 의미한다. 만약 통행료가 0인 경우는 i도시에서 j도시로 가는 길이없을을 의미한다.(0 ≤ MAT[i][j] ≤ 50)
 	 
 	 [제한조건]
 	 - 도시를 잇은 도로는 일방통행이다. 심지어 i번째 도시에서 j번째 도시로 가는 길은
 	     있어도, j번재 도시에서 i번째 도리소 가는 길은 없을 수도 있다.
 	 - 모든 도시를 정확히 한 번씩만 지나야 함을 유의하라.
 	 
 	 [출력]
 	   각 줄마다 "#T"(T는 테스트케이스 번호)를 출력한 뒤, 영준이가 M번 도시부터 시작하여
 	 모든 도시를 정확히 한 번씩 순회하고 오는데 드는 통행룔 최솟값을 출력하시오. 단, 불가능
 	 할 경우 -1을 출력한다.
 	 
 	 (입력예시)
 	 1
 	 3 1
 	 0 1 1
 	 1 0 10
 	 2 20 0
 	 
 	 (출력예시)
 	 #1 13
 */
public class dfsCityTravel {

}
