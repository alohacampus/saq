package prob.basic.bfs;
/*
	Q.화산 폭발2
	 세로와 가로의 크기가 N인 정사각형 모양의 격자로 이루어진 섬에 화산이 폭발하였다.
	최초 격자의 상태는 초원, 바리케이트, 화산 세 가지 상태로 이루어져 있다. 용암은 화산에
	서 출발하여 상하좌우 네 방향 중 초원이 있는 곳들을 파괴된 초원으로 바꾸며 퍼져나간다.
	만약 네 방향 중 바리케이트가 설치되어 있거나 혹은 화산이 존재한다면 해당 영역을 지나 갈
	수 없다. 정부에서는 화산 폭발로 인한 용암의 피해를 최소한으로 하기 위해 기존에 설치된 바리케이트
	외에 M개의 바리케이트를 초원 위에 추가로 설치하기로 하였다. M개의 바리케이트를 모두 설치한
	 후 시간이 충분히 지나 용암이 퍼져나갈 수 있는 모든 영역으로 퍼져나갔을 때, 파괴되지 않은
	 초원의 크개를 구하는 프로그램을 작성하시오.
	
	[입력]
	  첫 번째 줄에 테스트케이스의 수 T(1 ≤ T ≤ 10)가 주어진다.
	각 테스트케이스마다 첫 번째 줄에 가로와 세로의 크기 N과 바리케이트의 수 M이 공백을 두고 주어진다(3 ≤ N ≤ 100).
	  다음 N개의 줄에는 각 줄에 N개의 숫자들이 공백을 두고 주어지는데, 1번째 줄의 j번째
	 숫자는 섬의 i행 j열의 상태 MAT[i][j]를 나타낸다. MAT[i][j]값이 0인 경우에는 초원이며
	 1인 경우에는 이미 세워진 바리케이드, 2인 경우네는 화산이 폭발한 지점이다.
	 
	[제한조건]
	- M개의 추가 바리케이트는 초원인 곳에만 세울 수 있다.
	- M개의 추가 바리케이트는 화산이 폭발하여 용암이 퍼져나가기 전에 모두 설치된다고 가정한다.
	- M개의 추가 바리케이트가 설치할 공간(초원)이 있음은 항상 보장된다.
	 
	[출력]
	  각 줄마다 "#T"(T는 테스트케이스 번호)를 출력한 뒤, 공백을 두고 M개의 추가 바리케이트
	  설치 후 용암이 퍼져나가도 파괴되지 않는 초원의 최대 개수를 출력한다.
	 
	(입력예시)
	1
	4 2
	0 0 0 0
	0 2 1 0
	0 1 2 1
	0 0 1 0
	
	(출력예시)
	#1 8
*/



public class bfsVolcano2 {

}
