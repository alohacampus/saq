package prob.basic.bfs;

/*
	Q. 미로 찾기1
	  세로 N, 가로 M 크기의 격자와 시작점(S_r, S_c)과 탈출구(E_r, E_c)가 주어졌을 때,
	시작점부터 탈출구까지 이동하기 위해 필요한 최소 이동 횟수를 구하는 프로그램을 작성하시오.
	한 번 이동시 상하좌우로 한 칸씩만 이동할 수 있으며, 벽이 있는 지점은 이동할 수 없다.
	만약 탈출구까지 이동할 수 있는 방법이 존재하지 않는다면 -1을 출력한다.
	
	[입력]
	 첫 번째 줄에 테스트케이스 수 T(1 ≤ T ≤ 10)가 주어진다.
	 각 테스트케이스마다 첫 번째 줄에는 격자의 세로의 길이 N과 가로의 길이 M이 공백을 두고
	주어진다.(3 ≤ N,M ≤ 1,000)
	 두 번째 줄에는 격자의 시작점(S_r, S_c)과 탈출구(E_r,E_c)를 나타내는 S_r, S_c, E_r, E_c가
	 각각 공백을 두고 주어진다. 각 좌표 쌍은 (행, 열)을 의미한다.
	다은 N개의 줄에는 각 줄마다 M개의 숫자들이 공백을 두고 주어지는데 i번째 줄의 j번째 숫자는
	격자의 (i, j)의 상태를 의미한다. 만약 값이 0인 경우 이동할 수 있는 곳이고, 1인 경우
	이동할 수 없는 벽이 설치되어 있다는 뜻이다.
	
	[출력]
	각 줄마다 "#T"(T는 테스트케이스 번호)를 출력한 뒤, 공백울 두고 시작점부터 탈출구 까지
	이동하는데 필요한 최소 횟수를 출력한다.
	
	[제한 조건]
	- 격자 밖으로 이동은 불가능하다.
	- 시작점과 탈출구가 벽(1)인 경우는 없다.
	- 좌측 상단의 좌표는 (1,1)이고 우측 하단의 좌표는 (N,M)이다.
	
	(입력예시)
	1
	3 4
	3 1 1 4
	0 0 1 0
	0 1 0 0
	0 0 0 1

	(출력예시)
	#1 5
	
*/

public class bfsMaze1 {
	
}
